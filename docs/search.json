[
  {
    "objectID": "pages/combining.html",
    "href": "pages/combining.html",
    "title": "Combining Excel and Delimited Data",
    "section": "",
    "text": "library(readxl)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nwhite_wine &lt;- read_excel(\"white_wine.xlsx\", sheet = 1, skip = 1, col_names = FALSE)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n• `` -&gt; `...3`\n• `` -&gt; `...4`\n• `` -&gt; `...5`\n• `` -&gt; `...6`\n• `` -&gt; `...7`\n• `` -&gt; `...8`\n• `` -&gt; `...9`\n• `` -&gt; `...10`\n• `` -&gt; `...11`\n• `` -&gt; `...12`\n\nvariable_names &lt;- read_excel(\"white_wine.xlsx\", sheet = 2)\nwhite_wine\n\n# A tibble: 4,898 × 12\n    ...1  ...2  ...3  ...4  ...5  ...6  ...7  ...8  ...9 ...10 ...11 ...12\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     7  0.27  0.36  20.7 0.045    45   170 1.00      3  0.45    88     6\n 2    63  0.3   0.34   1.6 0.049    14   132 0.994    33  0.49    95     6\n 3    81  0.28  0.4    6.9 0.05     30    97 0.995   326  0.44   101     6\n 4    72  0.23  0.32   8.5 0.058    47   186 0.996   319  0.4     99     6\n 5    72  0.23  0.32   8.5 0.058    47   186 0.996   319  0.4     99     6\n 6    81  0.28  0.4    6.9 0.05     30    97 0.995   326  0.44   101     6\n 7    62  0.32  0.16   7   0.045    30   136 0.995   318  0.47    96     6\n 8     7  0.27  0.36  20.7 0.045    45   170 1.00      3  0.45    88     6\n 9    63  0.3   0.34   1.6 0.049    14   132 0.994    33  0.49    95     6\n10    81  0.22  0.43   1.5 0.044    28   129 0.994   322  0.45    11     6\n# ℹ 4,888 more rows\n\n#rename var names\nvariable_names_extracted &lt;- as.character(variable_names[[1]])\ncolnames(white_wine) &lt;- variable_names_extracted\n\n#add column to indicate white wine\nwhite_wine2 &lt;- white_wine |&gt;\n  mutate(type = \"white\")\nwhite_wine2\n\n# A tibble: 4,898 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n\n\n\nlibrary(readr)\n\n#red_wine &lt;- read_csv2(\"https://www4.stat.ncsu.edu/~online/datasets/red-wine.csv\")\nred_wine &lt;- read_delim(\n  \"https://www4.stat.ncsu.edu/~online/datasets/red-wine.csv\",\n  delim = \";\",\n)\n\nRows: 1599 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#rename var names\nvariable_names_extracted &lt;- as.character(variable_names[[1]])\ncolnames(red_wine) &lt;- variable_names_extracted\n\n#add column to indicate red wine\nred_wine2 &lt;- red_wine |&gt;\n  mutate(across(where(is.character), as.numeric)) |&gt;\n  mutate(type = \"red\")\n\n\n\n\n\ncombined_wine &lt;- bind_rows(white_wine2, red_wine2, .id = NULL)\n\ncombined_wine2 &lt;- combined_wine |&gt;\n  filter (quality &gt; 6.5 & alcohol &lt; 132) |&gt;\n  arrange (desc(quality)) |&gt;\n  select(contains(\"acid\"), alcohol, type, quality) |&gt;\n  group_by(quality) |&gt;\n  mutate(alcohol_mean = mean(alcohol, na.rm = TRUE), alcohol_sd = sd(alcohol, na.rm = TRUE ))\n  \ncombined_wine2\n\n# A tibble: 1,206 × 8\n# Groups:   quality [3]\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality alcohol_mean\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;        &lt;dbl&gt;\n 1            91             0.27        0.45     104 white       9        122. \n 2            66             0.36        0.29     124 white       9        122. \n 3            74             0.24        0.36     125 white       9        122. \n 4            69             0.36        0.34     127 white       9        122. \n 5            71             0.26        0.49     129 white       9        122. \n 6            62             0.66        0.48     128 white       8         94.1\n 7            62             0.66        0.48     128 white       8         94.1\n 8            68             0.26        0.42     105 white       8         94.1\n 9            67             0.23        0.31     107 white       8         94.1\n10            67             0.23        0.31     107 white       8         94.1\n# ℹ 1,196 more rows\n# ℹ 1 more variable: alcohol_sd &lt;dbl&gt;",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/combining.html#task-3-combining-excel-and-delimited-data",
    "href": "pages/combining.html#task-3-combining-excel-and-delimited-data",
    "title": "Combining Excel and Delimited Data",
    "section": "",
    "text": "library(readxl)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nwhite_wine &lt;- read_excel(\"white_wine.xlsx\", sheet = 1, skip = 1, col_names = FALSE)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n• `` -&gt; `...3`\n• `` -&gt; `...4`\n• `` -&gt; `...5`\n• `` -&gt; `...6`\n• `` -&gt; `...7`\n• `` -&gt; `...8`\n• `` -&gt; `...9`\n• `` -&gt; `...10`\n• `` -&gt; `...11`\n• `` -&gt; `...12`\n\nvariable_names &lt;- read_excel(\"white_wine.xlsx\", sheet = 2)\nwhite_wine\n\n# A tibble: 4,898 × 12\n    ...1  ...2  ...3  ...4  ...5  ...6  ...7  ...8  ...9 ...10 ...11 ...12\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     7  0.27  0.36  20.7 0.045    45   170 1.00      3  0.45    88     6\n 2    63  0.3   0.34   1.6 0.049    14   132 0.994    33  0.49    95     6\n 3    81  0.28  0.4    6.9 0.05     30    97 0.995   326  0.44   101     6\n 4    72  0.23  0.32   8.5 0.058    47   186 0.996   319  0.4     99     6\n 5    72  0.23  0.32   8.5 0.058    47   186 0.996   319  0.4     99     6\n 6    81  0.28  0.4    6.9 0.05     30    97 0.995   326  0.44   101     6\n 7    62  0.32  0.16   7   0.045    30   136 0.995   318  0.47    96     6\n 8     7  0.27  0.36  20.7 0.045    45   170 1.00      3  0.45    88     6\n 9    63  0.3   0.34   1.6 0.049    14   132 0.994    33  0.49    95     6\n10    81  0.22  0.43   1.5 0.044    28   129 0.994   322  0.45    11     6\n# ℹ 4,888 more rows\n\n#rename var names\nvariable_names_extracted &lt;- as.character(variable_names[[1]])\ncolnames(white_wine) &lt;- variable_names_extracted\n\n#add column to indicate white wine\nwhite_wine2 &lt;- white_wine |&gt;\n  mutate(type = \"white\")\nwhite_wine2\n\n# A tibble: 4,898 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n\n\n\nlibrary(readr)\n\n#red_wine &lt;- read_csv2(\"https://www4.stat.ncsu.edu/~online/datasets/red-wine.csv\")\nred_wine &lt;- read_delim(\n  \"https://www4.stat.ncsu.edu/~online/datasets/red-wine.csv\",\n  delim = \";\",\n)\n\nRows: 1599 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#rename var names\nvariable_names_extracted &lt;- as.character(variable_names[[1]])\ncolnames(red_wine) &lt;- variable_names_extracted\n\n#add column to indicate red wine\nred_wine2 &lt;- red_wine |&gt;\n  mutate(across(where(is.character), as.numeric)) |&gt;\n  mutate(type = \"red\")\n\n\n\n\n\ncombined_wine &lt;- bind_rows(white_wine2, red_wine2, .id = NULL)\n\ncombined_wine2 &lt;- combined_wine |&gt;\n  filter (quality &gt; 6.5 & alcohol &lt; 132) |&gt;\n  arrange (desc(quality)) |&gt;\n  select(contains(\"acid\"), alcohol, type, quality) |&gt;\n  group_by(quality) |&gt;\n  mutate(alcohol_mean = mean(alcohol, na.rm = TRUE), alcohol_sd = sd(alcohol, na.rm = TRUE ))\n  \ncombined_wine2\n\n# A tibble: 1,206 × 8\n# Groups:   quality [3]\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality alcohol_mean\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;        &lt;dbl&gt;\n 1            91             0.27        0.45     104 white       9        122. \n 2            66             0.36        0.29     124 white       9        122. \n 3            74             0.24        0.36     125 white       9        122. \n 4            69             0.36        0.34     127 white       9        122. \n 5            71             0.26        0.49     129 white       9        122. \n 6            62             0.66        0.48     128 white       8         94.1\n 7            62             0.66        0.48     128 white       8         94.1\n 8            68             0.26        0.42     105 white       8         94.1\n 9            67             0.23        0.31     107 white       8         94.1\n10            67             0.23        0.31     107 white       8         94.1\n# ℹ 1,196 more rows\n# ℹ 1 more variable: alcohol_sd &lt;dbl&gt;",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/concepts.html",
    "href": "pages/concepts.html",
    "title": "Conceptual Questions",
    "section": "",
    "text": "read.csv(“../MyData.csv”)\n\n\n\n\nR Projects are easy to create.\nThey provide a straightforward way to organize your project, including a working directory, work space, history, and folder structure with source documents.\nR Projects are easy to share: As long as we’ve used relative paths in our R Project, we can also share the Project with other users, who will easily be able to work seamlessly on the project. Other users will have to download and install any version of R packages, as packages are specific to a computer and not automatically transferred along with a project.\n\n\n\n\n\nGit is an open-source version control software.\nGitHub is a web platform that is built around Git. It offers a user-friendly interface that makes it easy to use Git for version control and to collaborate with other people by sharing code and more.\n\n\n\n\n\nPrinting: A tibble prints only the first 10 rows and fits the output to your screen width. This makes it much more user-friendly for large data sets. The most important difference between tibbles and data frames is the way tibbles print; they are designed for large datasets, so they only show the first few rows (10 rows) and only the columns that fit on one screen.\nReferencing and Handling Columns: When performing queries, subsets, etc. Data Frames will accept partial matches of column names, but Tibbles require exact matching names.\n\n\n\n\n\narrange(filter(select(as_tibble(iris), starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n  as_tibble(iris) |&gt;\n    select(starts_with(\"Petal\"), Species) |&gt;\n    filter(Petal.Length &lt; 1.55) |&gt;\n    arrange(Species)\n\n# A tibble: 37 × 3\n   Petal.Length Petal.Width Species\n          &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  \n 1          1.4         0.2 setosa \n 2          1.4         0.2 setosa \n 3          1.3         0.2 setosa \n 4          1.5         0.2 setosa \n 5          1.4         0.2 setosa \n 6          1.4         0.3 setosa \n 7          1.5         0.2 setosa \n 8          1.4         0.2 setosa \n 9          1.5         0.1 setosa \n10          1.5         0.2 setosa \n# ℹ 27 more rows",
    "crumbs": [
      "Home",
      "Conceptual Questions"
    ]
  },
  {
    "objectID": "pages/concepts.html#task-1-answer-questions",
    "href": "pages/concepts.html#task-1-answer-questions",
    "title": "Conceptual Questions",
    "section": "",
    "text": "read.csv(“../MyData.csv”)\n\n\n\n\nR Projects are easy to create.\nThey provide a straightforward way to organize your project, including a working directory, work space, history, and folder structure with source documents.\nR Projects are easy to share: As long as we’ve used relative paths in our R Project, we can also share the Project with other users, who will easily be able to work seamlessly on the project. Other users will have to download and install any version of R packages, as packages are specific to a computer and not automatically transferred along with a project.\n\n\n\n\n\nGit is an open-source version control software.\nGitHub is a web platform that is built around Git. It offers a user-friendly interface that makes it easy to use Git for version control and to collaborate with other people by sharing code and more.\n\n\n\n\n\nPrinting: A tibble prints only the first 10 rows and fits the output to your screen width. This makes it much more user-friendly for large data sets. The most important difference between tibbles and data frames is the way tibbles print; they are designed for large datasets, so they only show the first few rows (10 rows) and only the columns that fit on one screen.\nReferencing and Handling Columns: When performing queries, subsets, etc. Data Frames will accept partial matches of column names, but Tibbles require exact matching names.\n\n\n\n\n\narrange(filter(select(as_tibble(iris), starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n  as_tibble(iris) |&gt;\n    select(starts_with(\"Petal\"), Species) |&gt;\n    filter(Petal.Length &lt; 1.55) |&gt;\n    arrange(Species)\n\n# A tibble: 37 × 3\n   Petal.Length Petal.Width Species\n          &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  \n 1          1.4         0.2 setosa \n 2          1.4         0.2 setosa \n 3          1.3         0.2 setosa \n 4          1.5         0.2 setosa \n 5          1.4         0.2 setosa \n 6          1.4         0.3 setosa \n 7          1.5         0.2 setosa \n 8          1.4         0.2 setosa \n 9          1.5         0.1 setosa \n10          1.5         0.2 setosa \n# ℹ 27 more rows",
    "crumbs": [
      "Home",
      "Conceptual Questions"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Homework 4",
    "section": "",
    "text": "An example pages site with multiple pages and a table of contents.\nThis could be a landing page for the site. Feel free to put whatever here!",
    "crumbs": [
      "Home",
      "Homework 4"
    ]
  },
  {
    "objectID": "pages/read_delimited.html",
    "href": "pages/read_delimited.html",
    "title": "Reading Delimited Data",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# read in data from URL and specify col names\nglass_data &lt;- read_csv(\"https://www4.stat.ncsu.edu/~online/datasets/glass.data\", col_names = c(\"ID\",\"RI\",\"Na\",\"Mg\",\"Al\",\"Si\",\"K\",\"Ca\",\"Ba\",\"Fe\",\"TypeOfGlass\"))\n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): ID, RI, Na, Mg, Al, Si, K, Ca, Ba, Fe, TypeOfGlass\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglass_data\n\n# A tibble: 214 × 11\n      ID    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe TypeOfGlass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0              1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0              1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0              1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0              1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0              1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26           1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0              1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0              1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0              1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11           1\n# ℹ 204 more rows\n\n\nUse chain to overwrite Type of Glass column and keep Fe less than 0.2 and Type of Glass as either tableware or headlamps:\n\nlibrary(dplyr)\n\nglass_data2 &lt;- glass_data |&gt;\n  mutate(\n    TypeOfGlass = case_when(\n      TypeOfGlass == 1 ~ \"building_windows_float_processed\",\n      TypeOfGlass == 2 ~ \"building_windows_non_float_processed\",\n      TypeOfGlass == 3 ~ \"vehicle_windows_float_processed\",\n      TypeOfGlass == 4 ~ \"vehicle_windows_non_float_processed\",\n      TypeOfGlass == 5 ~ \"containers\",\n      TypeOfGlass == 6 ~ \"tablewares\",\n      TypeOfGlass == 7 ~ \"headlamps\",\n      TRUE             ~ \"other\"\n    )\n  ) |&gt;\n  filter(Fe &lt; 0.2) |&gt;\n  filter(TypeOfGlass == \"tablewares\" | TypeOfGlass == \"headlamps\")\n   \nglass_data2\n\n# A tibble: 38 × 11\n      ID    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe TypeOfGlass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tablewares \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tablewares \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tablewares \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tablewares \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tablewares \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tablewares \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tablewares \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tablewares \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tablewares \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamps  \n# ℹ 28 more rows\n\n\n\n\n\n\nlibrary(tidyverse)\n# read in yeast space delimited file from URL\nyeast_data &lt;- read_table(\"https://www4.stat.ncsu.edu/~online/datasets/yeast.data\", col_names = c(\"seq_name\",\"mcg\",\"gvh\", \"alm\",\"mit\",\"erl\",\"pox\",\"vac\",\"nuc\",\"class\"))\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  seq_name = col_character(),\n  mcg = col_double(),\n  gvh = col_double(),\n  alm = col_double(),\n  mit = col_double(),\n  erl = col_double(),\n  pox = col_double(),\n  vac = col_double(),\n  nuc = col_double(),\n  class = col_character()\n)\n\nyeast_data\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows\n\n#add mean and median to each numeric variable (mcg, gvh, alm, mit, erl, pox, and vac) by class grouping\nyeast_data2 &lt;- yeast_data |&gt;\n  select(-seq_name, -nuc) |&gt;\n  group_by(class) |&gt;\n  mutate(across(where(is.numeric), mean, .names = \"mean_{.col}\"))",
    "crumbs": [
      "Home",
      "Reading Delimited Data"
    ]
  },
  {
    "objectID": "pages/read_delimited.html#task-2-reading-delimited-data",
    "href": "pages/read_delimited.html#task-2-reading-delimited-data",
    "title": "Reading Delimited Data",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# read in data from URL and specify col names\nglass_data &lt;- read_csv(\"https://www4.stat.ncsu.edu/~online/datasets/glass.data\", col_names = c(\"ID\",\"RI\",\"Na\",\"Mg\",\"Al\",\"Si\",\"K\",\"Ca\",\"Ba\",\"Fe\",\"TypeOfGlass\"))\n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): ID, RI, Na, Mg, Al, Si, K, Ca, Ba, Fe, TypeOfGlass\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglass_data\n\n# A tibble: 214 × 11\n      ID    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe TypeOfGlass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0              1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0              1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0              1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0              1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0              1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26           1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0              1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0              1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0              1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11           1\n# ℹ 204 more rows\n\n\nUse chain to overwrite Type of Glass column and keep Fe less than 0.2 and Type of Glass as either tableware or headlamps:\n\nlibrary(dplyr)\n\nglass_data2 &lt;- glass_data |&gt;\n  mutate(\n    TypeOfGlass = case_when(\n      TypeOfGlass == 1 ~ \"building_windows_float_processed\",\n      TypeOfGlass == 2 ~ \"building_windows_non_float_processed\",\n      TypeOfGlass == 3 ~ \"vehicle_windows_float_processed\",\n      TypeOfGlass == 4 ~ \"vehicle_windows_non_float_processed\",\n      TypeOfGlass == 5 ~ \"containers\",\n      TypeOfGlass == 6 ~ \"tablewares\",\n      TypeOfGlass == 7 ~ \"headlamps\",\n      TRUE             ~ \"other\"\n    )\n  ) |&gt;\n  filter(Fe &lt; 0.2) |&gt;\n  filter(TypeOfGlass == \"tablewares\" | TypeOfGlass == \"headlamps\")\n   \nglass_data2\n\n# A tibble: 38 × 11\n      ID    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe TypeOfGlass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tablewares \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tablewares \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tablewares \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tablewares \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tablewares \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tablewares \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tablewares \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tablewares \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tablewares \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamps  \n# ℹ 28 more rows\n\n\n\n\n\n\nlibrary(tidyverse)\n# read in yeast space delimited file from URL\nyeast_data &lt;- read_table(\"https://www4.stat.ncsu.edu/~online/datasets/yeast.data\", col_names = c(\"seq_name\",\"mcg\",\"gvh\", \"alm\",\"mit\",\"erl\",\"pox\",\"vac\",\"nuc\",\"class\"))\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  seq_name = col_character(),\n  mcg = col_double(),\n  gvh = col_double(),\n  alm = col_double(),\n  mit = col_double(),\n  erl = col_double(),\n  pox = col_double(),\n  vac = col_double(),\n  nuc = col_double(),\n  class = col_character()\n)\n\nyeast_data\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows\n\n#add mean and median to each numeric variable (mcg, gvh, alm, mit, erl, pox, and vac) by class grouping\nyeast_data2 &lt;- yeast_data |&gt;\n  select(-seq_name, -nuc) |&gt;\n  group_by(class) |&gt;\n  mutate(across(where(is.numeric), mean, .names = \"mean_{.col}\"))",
    "crumbs": [
      "Home",
      "Reading Delimited Data"
    ]
  }
]